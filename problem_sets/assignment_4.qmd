---
title: "assignment_4.qmd"
author: "Patrick Shea"
format: gfm
editor: visual
---

# Assignment 4: Data Transformation

## **Instructions: Please read through this before you begin**

-   This assignment is due by **10pm on Thursday 09/25/2024**. Please upload it using your personal GitHub repository for this class.

-   You can start by making a copy of the Quarto template that you created as `assignment_1.qmd` and work from there (you wrote up most of the template text needed here in assignment 1; now you’ll be filling in the code chunks).

-   Please name your Quarto file `assignment_4.qmd` and select `gfm` as the output format.

-   For this assignment, please **reproduce this markdown file** using Quarto. This includes the following:

    -   **Reproduce this markdown template**, except for this list of instructions which you **don’t** have to include. Pay attention to all the formating in this file, including bullet points, bolded characters, inserted code chunks, headings, text colors, blank lines, etc.

    -   Write code to reproduce all the figures and tables shown. Have all your code embedded within the Quarto file, and show **BOTH your code and plots** in the rendered markdown file.

    -   When a verbal response is needed, answer by editing the part in the Quarto template where it says “Write your response here”.

    -   Use Quarto functionalities to **hide messages and warnings when needed**. (Suggestion: messages and warnings can often be informative and important, so please examine them carefully and only turn them off when you finish the exercise).

-   Note that Exercise 3 is **optional** (only Exercise 1 and 2 are required).

## Load packages

To start, load all the required packages with the following code. Install them if they are not installed yet.

``` r
library(tidyverse)
library(knitr)
```

```{r}
library(tidyverse)
library(knitr)
```

## Exercise 1. Corruption and human development

This exercise explores a dataset containing the human development index (`HDI`) and corruption perception index (`CPI`) of 173 countries across 6 different regions around the world: Americas, Asia Pacific, Eastern Europe and Central Asia (`East EU Cemt`), Western Europe (`EU W. Europe`), Middle East and North Africa and Noth Africa (`MENA`), and Sub-Saharan Africa (`SSA`). (Note: the larger `CPI` is, the less corrupted the country is perceived to be.)

First, we load the data using the following code.

``` r
economist_data <- read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/EconomistData.csv")
```

```{r}
economist_data <- read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/EconomistData.csv")
```

#### 1.1 Show the first few rows of `economist_data`.

```{r}
head(economist_data)

```

#### 1.2 Expore the relationship between human development index (`HDI`) and corruption perception index (`CPI`) with a scatter plot as the following.

```{r}
economist_data |> ## same workflow from Thurs Class
  select(Country, HDI, CPI) |> ## selecting what I want to use 
  ggplot() + ## don't have to add ^^ or do it same way as base "r"
  geom_point(mapping = aes(x = CPI, y = HDI )  )  

    
  
      
```

#### 1.3 Make the color of all points in the previous plot red.

```{r}
economist_data |> ## same workflow from Thurs Class
  select(Country, HDI, CPI) |> ## selecting what I want to use 
  ggplot() + ## don't have to add ^^ or do it same way as base "r"
  geom_point(mapping = aes(x = CPI, y = HDI ), color = "red") 
  

```

#### 1.4 Color the points in the previous plot according to the `Region` variable, and set the size of points to 2.

```{r}
economist_data |> ## same workflow from Thurs Class
  select(Country, HDI, CPI, Region) |> ## selecting what I want to use 
  ggplot() + ## don't have to add ^^ or do it same way as base "r"
  geom_point(mapping = aes(x = CPI, y = HDI, color = Region), size = 2)  

```

#### 1.5 Set the size of the points proportional to `HDI.Rank`

```{r}
economist_data |> ## same workflow from Thurs Class
  select(Country, HDI, CPI, Region, HDI.Rank) |> ## selecting what I want to use 
  ggplot() + ## don't have to add ^^ or do it same way as base "r"
  geom_point(mapping = aes(x = CPI, y = HDI, color = Region, size = HDI.Rank)) 
```

`<`{=html}

#### 1.6 Fit a **smoothing line** to **all** the data points in the scatter plot from Exercise 1.4

```{r}

economist_data |> ## same workflow from Thurs Class
  select(Country, HDI, CPI, Region) |> 
  ggplot() + 
  geom_point(mapping = aes(x = CPI, y = HDI, color = Region), size = 2) +
  geom_smooth(mapping = aes(x = CPI, y = HDI), color="blue")
```

#### 1.7 Fit a separate **straight line** for **each region** instead, and turn off the confidence interval.

```{r}

economist_data |> ## same workflow from Thurs Class
  select(Country, HDI, CPI, Region, HDI.Rank) |> ## selecting what I want to use 
  ggplot() + ## don't have to add ^^ or do it same way as base "r"
  geom_point(mapping = aes(x = CPI, y = HDI, color = Region)) + ## need to keep track of ()
  geom_smooth(mapping = aes(x = CPI, y = HDI, color = Region), method = "lm", se = FALSE)




```

#### 1.8 Building on top of the previous plot, show each `Region` in a different facet.

```{r}
economist_data |> ## going to stop commenting
  select(Country, HDI, CPI, Region, HDI.Rank) |> 
  ggplot() + 
  geom_point(mapping = aes(x = CPI, y = HDI, color = Region)) + 
  geom_smooth(mapping = aes(x = CPI, y = HDI, color = Region), method = "lm", se = FALSE)+
  facet_wrap(~ Region) 

```

#### 1.9 Show the distribution of `HDI` in each region using density plot. Set the transparency to 0.5

```{r}

economist_data |> ## what i'm building off of 
  select(Country, HDI, Region,) |> 
  ggplot() + 
  geom_density(mapping = aes(x = HDI, fill = Region, alpha = 0.5 )) 
```

#### 1.10 Show the distribution of `HDI` in each region using histogram and facetting.

```{r}
economist_data |> 
  select(Country, HDI, Region) |> 
  ggplot() + 
  geom_histogram (mapping = aes(x = HDI,  fill = Region)) +
  facet_wrap(~Region) 
```

#### 1.11 Show the distribution of `HDI` in each region using a box plot. Set the transparency of these boxes to 0.5 and do not show outlier points with the box plot. Instead, show all data points for each country in the same plot. (Hint: `geom_jitter()` or `position_jitter()` might be useful.)

```{r}
economist_data |> 
  select(Country, HDI, Region) |> 
  ggplot() + 
  geom_boxplot(
    mapping = aes(x = Region, y = HDI, fill = Region, color = Region), 
    alpha = 0.5
  ) +
  geom_jitter(
    mapping = aes(x = Region, y = HDI, color = Region),   
    alpha = 0.7,                          
    size = 2
  )
```

#### 1.12 Show the count of countries in each region using a bar plot.

```{r}
economist_data |> 
  select(Country, HDI, Region) |> 
  ggplot() + 
  geom_bar(mapping = aes( x = Region))
```

#### 1.13 You have now created a variety of different plots of the same dataset. Which of your plots do you think are the most informative? Describe briefly the major trends that you see in the data.

Answer: Even though it is a lot of information, I like the Human Development Index vs Corruption Perception Index with dots proportional to HDI rank because I think it helps us identify the distribution in a helpful way.

Some trends: HDI is generally a higher value in what we would consider "wealthy" or traditionally colonial countries. There is more variability of HDI within regions than between regions.

## Exercise 2. Theophylline experiment

This exercise uses the `Theoph` data frame (comes with your R installation), which has 132 rows and 5 columns of data from an experiment on the pharmacokinetics of the anti-asthmatic drug theophylline. Twelve subjects were given oral doses of theophylline then serum concentrations were measured at 11 time points over the next 25 hours. You can learn more about this dataset by running `?Theoph`

Have a look at the data structure

```{r}
Theoph
head(Theoph)
tail(Theoph)
kable(Theoph)
```

For the following exercise, **transform the data as instructed**. Try to use `tidyverse` functions even if you are more comfortable with base-R solutions. Show the **first 6 lines** of the transformed data in a table through RMarkdown **using the kable() function**, as shown above.

#### 2.1 Select columns that contain a lower case “t” in the `Theoph` dataset. Do not manually list all the columns to include.

``` r
## Write your code here
Theoph |> 
  select(contains("t"))
```

```{r}
Theoph |> 
  select(contains("t"))
```

#### 2.2 Rename the `Wt` column to `Weight` and `conc` column to `Concentration` in the `Theoph` dataset.

```{r}
Theoph |> 
  rename(
    Weight = Wt,
    Concentration = conc ## "good habits" by having one idea per line of code  
  )
```

#### 2.3 Extract the `Dose` greater than 4.5 and `Time` greater than the mean `Time`.

```{r}
Theoph |> 
  filter(Dose > 4.5, Time> mean(Time)) ## ?filter gave the answer 
```

#### 2.4 Sort the `Theoph` dataset by `Wt` from smallest to largest and secondarily by Time from largest to smallest.

```{r}
Theoph |> 
  arrange(Wt, desc(Time))
  
```

#### 2.5 Create a new column called `Quantity` that equals to `Wt` x `Dose` in the `Theoph` dataset. This will tell you the absolute quantity of drug administered to the subject (in mg). Replace the `Dose` variable with `Quantity`.

```{r}
Theoph |> 
  mutate(Quantity = Wt * Dose ) |> 
  select(-Dose)
```

#### 2.6 Find the mean `conc` and sum of the `Dose` received by each test subject.

Show data for the 6 subjects with the smallest sum of `Dose` as below. **Do not define new intermediate objects for this exercise; use pipes to chain together functions.**

The 6 subjects with the smallest sum of Dose as below are #9, #6, #1, #2, #4, and #8

```{r}
Theoph |> 
  group_by(Subject) |> 
  summarise(
    mean_conc= mean(conc),
    sum_dose = sum(Dose)
                   ) |> 
      arrange(sum_dose) 
    
  
```

## Exercise 3. Unemployment in the US 1967-2015 (**OPTIONAL**)

This excercise uses the dataset `economics` from the ggplot2 package. It was produced from US economic time series data available from <http://research.stlouisfed.org/fred2>. It descibes the number of unemployed persons (`unemploy`), among other variables, in the US from 1967 to 2015.

``` r
head(economics) %>% kable()
```

| date       |   pce |    pop | psavert | uempmed | unemploy |
|:-----------|------:|-------:|--------:|--------:|---------:|
| 1967-07-01 | 506.7 | 198712 |    12.6 |     4.5 |     2944 |
| 1967-08-01 | 509.8 | 198911 |    12.6 |     4.7 |     2945 |
| 1967-09-01 | 515.6 | 199113 |    11.9 |     4.6 |     2958 |
| 1967-10-01 | 512.2 | 199311 |    12.9 |     4.9 |     3143 |
| 1967-11-01 | 517.4 | 199498 |    12.8 |     4.7 |     3066 |
| 1967-12-01 | 525.1 | 199657 |    11.8 |     4.8 |     3018 |

<br>

#### 3.1 Plot the trend in number of unemployed persons (`unemploy`) though time using the economics dataset shown above. And for this question only, **hide your code and only show the plot**.

``` r
## Write your code here
```

<br>

#### 3.2 Edit the plot title and axis labels of the previous plot appropriately. Make y axis start from 0. Change the background theme to what is shown below. (Hint: search for help online if needed)

``` r
## Write your code here
```

<br>
